//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Input System/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""ef55e186-1367-46b4-9076-134795798e68"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Button"",
                    ""id"": ""673a4364-c8e2-4bd2-98f1-3e16c93b3a3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Button"",
                    ""id"": ""1c24372e-8925-48e9-98a5-a4d919fd2a07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D-Pad"",
                    ""type"": ""Button"",
                    ""id"": ""6f2e51d3-8d11-4a19-a273-cf594155651f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShoulderButtons"",
                    ""type"": ""Button"",
                    ""id"": ""434a7da1-51f5-4d2d-a696-1636a4d93fb0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TriggerButtons"",
                    ""type"": ""Button"",
                    ""id"": ""40361e09-6cb3-469c-b0b0-94c0a67112cc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PositiveButtons"",
                    ""type"": ""Button"",
                    ""id"": ""81633d34-f4e2-4ebe-b3b2-507aafeb6228"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TouchpadButton"",
                    ""type"": ""Button"",
                    ""id"": ""9f4e9df1-22e0-49bb-9033-e86bc9789ecf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainButtons"",
                    ""type"": ""Button"",
                    ""id"": ""0d4dfddb-1873-4b73-bf5e-559478389122"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""819cc723-5c66-4a0d-90e0-d155deac3e58"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6d4d1f9-e45e-4fde-8d50-f9e84dd8ac7c"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bcf93704-5143-4033-9e8e-213b2fb8390a"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc693d36-e7a6-4b3c-b0eb-fe9ae3dea5e1"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd1c6cc4-641d-4f9d-84d6-902f83d3ada8"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""272459c5-9f47-41ae-9709-f5d3b5170d92"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d6b5376-4181-44c0-b86b-ec631e607c7b"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShoulderButtons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6bdecc0a-0893-4a1b-981c-6a5894294b47"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShoulderButtons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""99f72928-7748-4aab-a48c-f6e040fceb1c"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerButtons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af09e229-cd43-4755-a894-d913f7749523"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TriggerButtons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f78f70b6-dc3f-47de-8845-72ac380a5b38"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PositiveButtons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80f5dfd1-6014-4d8e-bded-c63dfad48c83"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PositiveButtons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb102e07-5e3a-47f4-a99a-8782cff69839"",
                    ""path"": ""<DualShockGamepad>/touchpadButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchpadButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afa44a25-37f6-484b-8890-21decd8f6f7c"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainButtons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c2f40f5-bbe5-4fc9-abe5-ce9aef1d6789"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainButtons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""065fd98c-3f42-43c6-b026-b73a28654e7f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainButtons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d6b7eab-0c69-47d4-a0aa-e302b751dc82"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainButtons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Rotation = m_Player.FindAction("Rotation", throwIfNotFound: true);
        m_Player_DPad = m_Player.FindAction("D-Pad", throwIfNotFound: true);
        m_Player_ShoulderButtons = m_Player.FindAction("ShoulderButtons", throwIfNotFound: true);
        m_Player_TriggerButtons = m_Player.FindAction("TriggerButtons", throwIfNotFound: true);
        m_Player_PositiveButtons = m_Player.FindAction("PositiveButtons", throwIfNotFound: true);
        m_Player_TouchpadButton = m_Player.FindAction("TouchpadButton", throwIfNotFound: true);
        m_Player_MainButtons = m_Player.FindAction("MainButtons", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Rotation;
    private readonly InputAction m_Player_DPad;
    private readonly InputAction m_Player_ShoulderButtons;
    private readonly InputAction m_Player_TriggerButtons;
    private readonly InputAction m_Player_PositiveButtons;
    private readonly InputAction m_Player_TouchpadButton;
    private readonly InputAction m_Player_MainButtons;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Rotation => m_Wrapper.m_Player_Rotation;
        public InputAction @DPad => m_Wrapper.m_Player_DPad;
        public InputAction @ShoulderButtons => m_Wrapper.m_Player_ShoulderButtons;
        public InputAction @TriggerButtons => m_Wrapper.m_Player_TriggerButtons;
        public InputAction @PositiveButtons => m_Wrapper.m_Player_PositiveButtons;
        public InputAction @TouchpadButton => m_Wrapper.m_Player_TouchpadButton;
        public InputAction @MainButtons => m_Wrapper.m_Player_MainButtons;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @DPad.started += instance.OnDPad;
            @DPad.performed += instance.OnDPad;
            @DPad.canceled += instance.OnDPad;
            @ShoulderButtons.started += instance.OnShoulderButtons;
            @ShoulderButtons.performed += instance.OnShoulderButtons;
            @ShoulderButtons.canceled += instance.OnShoulderButtons;
            @TriggerButtons.started += instance.OnTriggerButtons;
            @TriggerButtons.performed += instance.OnTriggerButtons;
            @TriggerButtons.canceled += instance.OnTriggerButtons;
            @PositiveButtons.started += instance.OnPositiveButtons;
            @PositiveButtons.performed += instance.OnPositiveButtons;
            @PositiveButtons.canceled += instance.OnPositiveButtons;
            @TouchpadButton.started += instance.OnTouchpadButton;
            @TouchpadButton.performed += instance.OnTouchpadButton;
            @TouchpadButton.canceled += instance.OnTouchpadButton;
            @MainButtons.started += instance.OnMainButtons;
            @MainButtons.performed += instance.OnMainButtons;
            @MainButtons.canceled += instance.OnMainButtons;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @DPad.started -= instance.OnDPad;
            @DPad.performed -= instance.OnDPad;
            @DPad.canceled -= instance.OnDPad;
            @ShoulderButtons.started -= instance.OnShoulderButtons;
            @ShoulderButtons.performed -= instance.OnShoulderButtons;
            @ShoulderButtons.canceled -= instance.OnShoulderButtons;
            @TriggerButtons.started -= instance.OnTriggerButtons;
            @TriggerButtons.performed -= instance.OnTriggerButtons;
            @TriggerButtons.canceled -= instance.OnTriggerButtons;
            @PositiveButtons.started -= instance.OnPositiveButtons;
            @PositiveButtons.performed -= instance.OnPositiveButtons;
            @PositiveButtons.canceled -= instance.OnPositiveButtons;
            @TouchpadButton.started -= instance.OnTouchpadButton;
            @TouchpadButton.performed -= instance.OnTouchpadButton;
            @TouchpadButton.canceled -= instance.OnTouchpadButton;
            @MainButtons.started -= instance.OnMainButtons;
            @MainButtons.performed -= instance.OnMainButtons;
            @MainButtons.canceled -= instance.OnMainButtons;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnDPad(InputAction.CallbackContext context);
        void OnShoulderButtons(InputAction.CallbackContext context);
        void OnTriggerButtons(InputAction.CallbackContext context);
        void OnPositiveButtons(InputAction.CallbackContext context);
        void OnTouchpadButton(InputAction.CallbackContext context);
        void OnMainButtons(InputAction.CallbackContext context);
    }
}
